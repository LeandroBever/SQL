CREATE DATABASE SUPERMERCADO_DB;
USE SUPERMERCADO_DB;

CREATE TABLE TB_GRUPO_PRODUTO (
ID_GRUPO_PRODUTO 		SMALLINT NOT NULL AUTO_INCREMENT,
NM_GRUPO_PRODUTO 		VARCHAR(255),
B_ATIVO 				BIT,
Constraint PK_GRUPO_PRODUTO PRIMARY KEY (ID_GRUPO_PRODUTO)
); 

CREATE TABLE TB_DEPARTAMENTO (
ID_DEPARTAMENTO 		SMALLINT NOT NULL AUTO_INCREMENT,
NM_DEPARTAMENTO 		VARCHAR(255),
B_ATIVO 				BIT,
Constraint PK_DEPARTAMENTO PRIMARY KEY (ID_DEPARTAMENTO)
);

CREATE TABLE TB_UNIDADE (
ID_UNIDADE 				TINYINT NOT NULL AUTO_INCREMENT, 
NM_UNIDADE 				VARCHAR(255),
CODE_UNIDADE 			VARCHAR(2),
B_ATIVO 				BIT,
Constraint PK_UNIDADE PRIMARY KEY (ID_UNIDADE)
);



CREATE TABLE TB_PRODUTO (
ID_PRODUTO				INT NOT NULL AUTO_INCREMENT,
NM_PRODUTO				VARCHAR(255),
CODE_BARRA				VARCHAR(20),
VR_CUSTO				DECIMAL(8,2),
VR_MARGEM				DECIMAL(8,2),
VR_VENDA				DECIMAL(8,2),
ID_GRUPO_PRODUTO 		SMALLINT,
ID_DEPARTAMENTO 		SMALLINT,
ID_UNIDADE 				TINYINT,
B_ATIVO					BIT,
DATA_CADASTRO			DATETIME,
Constraint PK_PRODUTO PRIMARY KEY (ID_PRODUTO),
Constraint FK_GRUPO_PRODUTO foreign key (ID_GRUPO_PRODUTO) references TB_GRUPO_PRODUTO (ID_GRUPO_PRODUTO),
Constraint FK_UNIDADE foreign key (ID_UNIDADE) references TB_UNIDADE (ID_UNIDADE),
Constraint FK_DEPARTAMENTO foreign key (ID_DEPARTAMENTO) references TB_DEPARTAMENTO (ID_DEPARTAMENTO)
);

CREATE TABLE TB_CLASSIFICACAO_FISCAL (
ID_CLASSIFICACAO_FISCAL SMALLINT NOT NULL AUTO_INCREMENT,
NM_CLASSIFICACAO_FISCAL VARCHAR(255),
CODE_CLASSIFICACAO_FISCAL SMALLINT,
B_ATIVO BIT,
Constraint PK_CLASSIFICACAO_FISCAL PRIMARY KEY (ID_CLASSIFICACAO_FISCAL)
);


importante cada tb_XXX ter:
id_XXX  --- int / tinyint / samllint - auto increment

NM_XXX ---- maioria das vezes usa varchar

se precisar ativo ou inativo usar:

B_ativo --- bit


tb cliente
nm cliente
numero cpf inteiro
num rg


QUANDO APARECER ERRO DE SYNTAX VERIFICAR AS VÍRGULAS, 

PEDIDO

PEDIDO ITEM

-------

AULA 4

UTILIZAR IDENTAÇÃO

JOIN - LEFT JOIN - SELECT - PESQUISAR SOBRE - 

DELETE WHERE - UPDATE WHERE ----ESCREVER SEMPRE COMANDO COMPLETO

START TRANSACTION ( - INICIA UMA ALTERAÇÃO - START PRA MIM - PAUSA PARA OS OUTROS A PARTIR DOS COMANDO INPUTADOS EM SEGUIDA..... FAÇO UM START ...IMPUTO DADOS ....ROLLBACK DESFAZ.... COMMIT CONFIRMA.......FOÇO OUTRO START ....
ROOLBACK - SERIA UM CTRBEGIN TRANS) L Z ---ATÉ CERCA DE 4 MINUTOS
COMMIT - NÃO TEM MAIS COMO RETORNAR COM O ROOLBACK

WITHNOLOCK - PERMITE USO DO BANCO ENQUANTO INSERE DADOS.

TRUNCATE TABLE TB_NOMEDATB----LIMPAR TABELA

START TRANSACTION PERMITE QUE EXCLUA DADOS DA TABELA E QUE RETORNE DEPOIS USANO ROOLBACK...SE FIZER COMMIT NÃO REORNA MAIS, TEM QUE INCLUIR UM NOVO
